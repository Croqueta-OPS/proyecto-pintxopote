// Generated by CoffeeScript 1.7.1
(function() {
  describe('GoogleMaps', function() {
    describe('#load()', function() {
      afterEach(function(done) {
        return GoogleMapsLoader.release(function() {
          return done();
        });
      });
      it('should throw an error if promise style is used', function() {
        return expect(function() {
          return GoogleMapsLoader.load().then();
        }).to["throw"](Error, 'Using promises is not supported anymore. Please take a look in new documentation and use callback instead.');
      });
      it('should load google api object', function(done) {
        return GoogleMapsLoader.load(function(google) {
          expect(google).to.be.a('object');
          expect(google).to.have.keys(['maps']);
          return done();
        });
      });
      return it('should load google api only for first time and then use stored object', function(done) {
        var count;
        count = 0;
        GoogleMapsLoader.onLoad(function() {
          return count++;
        });
        GoogleMapsLoader.load();
        GoogleMapsLoader.load();
        GoogleMapsLoader.load();
        return GoogleMapsLoader.load(function() {
          expect(count).to.be.equal(1);
          return done();
        });
      });
    });
    return describe('#release()', function() {
      return it('should restore google maps package to original state and remove google api object completely and load it again', function(done) {
        return GoogleMapsLoader.load(function() {
          return GoogleMapsLoader.release(function() {
            expect(GoogleMapsLoader.google).to.be["null"];
            expect(window.google).to.be.undefined;
            return GoogleMapsLoader.load(function(google) {
              expect(google).to.be.a('object');
              expect(google).to.have.keys(['maps']);
              return done();
            });
          });
        });
      });
    });
  });

}).call(this);
