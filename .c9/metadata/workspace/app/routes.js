{"changed":false,"filter":false,"title":"routes.js","tooltip":"/app/routes.js","value":"module.exports = function(app, passport) {\n\n\tvar Pintxo = require('../app/models/pintxo');//modelo\n\tvar User = require('../app/models/user');//modelo\n\tvar Bar = require('../app/models/bar');//modelo\n\n\t// =====================================\n\t// INDEX ========\n\t// =====================================\n\t\n\t\n\tapp.get('/', function(req, res) {\n\t\t\n\t\tconsole.log(req.isAuthenticated());\n\t\t\n\t\tif(req.isAuthenticated()){\n\t\t\n\t\t\tres.render('index.ejs', { nombre: 'Hola '+req.user.local.nomUsuario});\n\t\t\tconsole.log(req.user.local.nomUsuario);\n\t\t\t\n\t\t}else{\n\t\t\t\n\t\t\tres.render('index.ejs', { nombre: \" \"}); // Carga el index.ejs\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t});\n\n\tapp.get('/pintxos', function (require, response) {\n\t\t//Hacemos un find en la base de datos de la collección Pintxos\n\t \tPintxo.find(function(err, pintxos) {\n\t \t\t\n \t\t\tif (err) return console.error(err);\n \t\t\t//Obtenemos un array de pintxos (objetos json)\n  \t\t\tresponse.send(pintxos);\n  \t\t\t\n\t\t});\n\t\t\n\t});\n\t\n\tapp.get('/bares', function (require, response) {\n\t\t\n\t \tBar.find(function(err, bares) {\n\t \t\t\n \t\t\tif (err) return console.error(err);\n  \t\t\tresponse.send(bares);\n  \t\t\t\n\t\t});\n\t\t\n\t});\n\t\n\t// =====================================\n\t// LOGIN ===============================\n\t// =====================================\n\t// Muestra el formulario del login\n\tapp.get('/login', function(req, res) {\n\n\t\t// carga la página de inicio de sesión y muestra un mensaje en caso de error al registrarse\n\t\tres.render('login.ejs', { message: req.flash('loginMessage')});\n\t\t\n\t});\n\n\t// =====================================\n\t// SIGNUP ==============================\n\t// =====================================\n\t// Muestra el formulario de registro\n\tapp.get('/signup', function(req, res) {\n\t\t// carga la página de registro y muestra un mensaje en caso de error al registrarse\n\t\tres.render('signup.ejs', { message: req.flash('signupMessage')});\n\t});\n\t\n\t// Muestra el formulario del login\n\tapp.get('/admin', function(req, res) {\n\n\t\t// carga la página de inicio de sesión y muestra un mensaje en caso de error al registrarse\n\t\tres.render('admin.ejs', { message: req.flash('loginMessage')});\n\t\t\n\t});\n\t\n\t\n\t\n\t// =====================================\n\t// PROFILE SECTION =====================\n\t// =====================================\n\t// Para entrar en la sección de profile, hacemos que sea obligatorio estar logeado usando la función 'isLoggedIn'\n\t// we will use route middleware to verify this (the isLoggedIn function)\n\tapp.get('/profile', isLoggedIn, function(req, res) {\n\t\t\n\t\tres.render('profile.ejs', {\n\t\t\tuser : req.user // get the user out of session and pass to template\n\t\t});\n\n\t});\n\t\n\t\n\tapp.get('/administracion', isLoggedIn, function(req, res) {\n\t\tres.render('administracion.ejs');\n\t});\n\t\n\tapp.get('/edita-pintxos', isLoggedIn, function(req, res){\n\t\t\t\t\n\t\tPintxo.find({},function(err, pintxo){\n\t\t\t//Si existe un error\n\t\t\tif(err){\n\t\t\t\t//Muestra por consola\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.render('error');\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//Pasamos a la variable pintxos el pintxo\n\t\t\t\tres.render('edita-pintxos.ejs', {\n\t\t\t\t\tpintxos: pintxo\n\t\t\t\t});\n\t\t\t//Cierre de else\n\t\t\t}\n\t\t\t//Cierre del find\n\t\t});\n\t});\n\t\n\t//Añadir un pintxo a la colección de pintxos\n\tapp.post('/edita-pintxos',  isLoggedIn, function(req, res) {\n\n\t\t//Creamos una variable para crear un objeto de tipo Pintxo\n\t\tvar pintxo = new Pintxo ({\n\n\t\t\tnombre: req.body.nombre,\n\t\t\tdescripcion: req.body.descripcion,\n\t\t\timg: \"default\"//hasta que aprendamos a subir archivos se mantiene imagen por defecto\n\n\t\t});\n\n\n\t\t//Para guardar dicha instancia en la base de datos\n\t\tpintxo.save(function (err, pintxo) {\n\n\t\t  \t//Si existe un error\n\t\t\tif(err){\n\t\t\t\t\n\t\t\t\t//Muestra por consola el error\n\t\t    \tconsole.log('ERROR: ' + err);\n\t\t    \t\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//Muestra el mensaje por consola\n  \t\t\t\tconsole.log(pintxo.nombre + ' ha sido guardado.');\n\t\t\t\tres.redirect('/edita-pintxos');\n\t\t\t}\n\t\t});\n\t\t\n\t});\n\t\n\t\t//Añadir un pintxo a la colección de pintxos\n\tapp.post('/actualiza-pintxos',  isLoggedIn, function(req, res) {\n\t\t\n\t\tconsole.log(req.body.nombre);\n\t\tconsole.log(req.body.descripcion);\n\t\t\n\t\tPintxo.update({_id: req.body._id}, {nombre: req.body.nombre, descripcion: req.body.descripcion}, null, function (err) {\n\n\t\t\t//Si hay error\n\t\t\tif (err){\n\t\t      \t//Muestra por consola el error\n\t\t    \tconsole.log('ERROR: ' + err);\n\t\t    }else{\n\t\t    \t//redireccionamos a la página /edita-pintxos\n\t\t    \tconsole.log(req.body.id);\n\t\t\t\tres.redirect('/edita-pintxos')\n\t\t    }\n\n\t\t//Cierre del mtodo update\n\t\t});\n\t\t\n\t//Cierre de la función\n\t});\n\t\n\tapp.post('/actualiza-usuarios', isLoggedIn, function(req, res) {\n\t\t\n\t\tconsole.log(\"SHEYLA->\"+req.user.local.nomUsuario);\n\t\tconsole.log(\"req.body.username ->\"+req.body.username);\n\t\t\n\t\t\t//Buscar el nombre de usuario que se ha introducido en el formulario \n\t\t\t\t\tUser.findOne({ 'nomUsuario' :  req.body.username }), function(err, user){\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t//console.log(\"local.nomUsuario\"+local.nomUsuario);\n\t\t\t\t\t\t\t//console.log(\"req.body.username\"+req.body.username);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//si hay un usuario con ese nombre tendremos que mirar si es el mismo o un usuario diferente\n\t\t\t\t\t\tif(user){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//si el ID no es el mismo es que ya existe un usuario con ese nombre\n\t\t\t\t\t\t\tif(user.local._id != req.body.id){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//Aquí sacaríamos los mensajes de error\n\t\t\t\t\t\t\t\t//return done(null, false, req.flash('signupMessage', 'Ese usuario ya existe.'));\n\t\t\t\t\t\t\t\tconsole.log(\"Ese usuario ya existe\");\n\t\t\t\t\t\t\t\tres.redirect('/profile'/*, { message: req.flash('signupMessage')}*/);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuser.local.nomUsuario = req.body.username;\n\t\t\t\t\t\t\t\tconsole.log(\"Ese usuario esta libre\");\n\t\t\t\t\t\t\t\tres.redirect('/profile'/*, { message: req.flash('signupMessage')}*/);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t//Si no hay ningún usuario con ese nombre \n\t\t\t\t\t\t}else if(!user){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuser.local.nomUsuario = req.body.username;\n\t\t\t\t\t\t\tconsole.log(\"Ese usuario libre\");\n\t\t\t\t\t\t\tres.redirect('/profile'/*, { message: req.flash('signupMessage')}*/);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}else if(err){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\n\t});\n\t\t\n\t\t\n\t\n\t\n\tapp.post('/insertImg', isLoggedIn, function(req, res) {\n\t\t\n\t\tUser.update({_id : req.body.id}, {$set: {avatar:\"scvsdgsgfrsf\"}}, { w: 1 }, function(){});\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/*console.log(req.body.id);\n\t\n\t\tUser.findOne({_id: req.body.id}, function(err, user){\n\n\t\t\tconsole.log(user);\n\n\t\t\n\t\t\tUser.update({_id : req.body.id}, { $set: { avatar: 'sdfsghetds' }}, { multi: true }, function() {\n\t\t\t\tconsole.log(\"user encontrado2\");\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\tUser.save(function (err, pintxo) {});\n\t\t\t\n\t\t\t\n\t\t});*/\n\t\t\n\t});\n\t\t\n\n\t\n\tapp.post('/borra-pintxos',  isLoggedIn,function(req, res){\n\t\t\n\t\tPintxo.findByIdAndRemove(req.body.id, function (err, users) {\n \n    \t\t\t//Si existe un error\n\t\t\tif(err){\n\t\t\t\t\n\t\t\t\t//Muestra por consola el error\n\t\t    \tconsole.log('ERROR: ' + err);\n\t\t    \t\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//Muestra el mensaje por consola\n  \t\t\t\tres.redirect('/edita-pintxos');\n\t\t\t}\n \n  \t\t});\n\n\t});\n\n\t// =====================================\n\t// LOGOUT ==============================\n\t// =====================================\n\tapp.get('/logout', function(req, res) {\n\t\treq.logout();\n\t\tres.redirect('/');\n\t});\n\n\t// procesamos el formulario de registro\n\tapp.post('/signup', passport.authenticate('local-signup', {\n\t\tsuccessRedirect : '/profile', // redirect to the secure profile section\n\t\tfailureRedirect : '/signup', // redirect back to the signup page if there is an error\n\t\tfailureFlash : true // allow flash messages\n\t}));\n\n\t// procesamos el formulario login\n\tapp.post('/login', passport.authenticate('local-login', {\n\t\tsuccessRedirect : '/profile', // redirect to the secure profile section\n\t\tfailureRedirect : '/login', // redirect back to the signup page if there is an error\n\t\tfailureFlash : true // allow flash messages\n\t}));\n\t\n\t//////////BORRAR SI NO FUNCIONA PARA NADA////////////////////////\n\t// procesamos el formulario login\n\tapp.post('/admin', passport.authenticate('local-admin', {\n\t\tsuccessRedirect : '/administracion', // redirect to the secure profile section\n\t\tfailureRedirect : '/admin', // redirect back to the signup page if there is an error\n\t\tfailureFlash : true // allow flash messages\n\t}));\n\t////////////////////////////////////////////////////////////////\n};\n\n// esta es la función utilizada para verificar que un usuario está autentificado\nfunction isLoggedIn(req, res, next) {\n\t// Si el usuario está autentificado, sigue adelante \n\tif (req.isAuthenticated())\n\t\treturn next();\n\n\t// si no ha accedido, redirecciona al inicio\n\tres.redirect('/');\n}\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":2400,"scrollleft":0,"selection":{"start":{"row":176,"column":65},"end":{"row":176,"column":65},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":170,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1421240724293}