{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":59,"column":41},"action":"insert","lines":["var express = require('express');","var app = express();","","//var conection = require('mongodb').MongoClient;","var passport = require('passport');","var flash \t = require('connect-flash');//muestra mensajes flash","var mongoose = require('mongoose');","","var morgan       = require('morgan');//muestra las peticiones y respuestas por consola","var cookieParser = require('cookie-parser');","var bodyParser   = require('body-parser');//necesario para recibir datos desde html","var session      = require('express-session');","","var configDB = require('./config/database.js');//con esta línea cargamos la url de la base de datos a la variable configDB","","// Conexión con BBDD ===============================================================","mongoose.connect(configDB.url, function(err, res){","\tif(!err){","\t\tconsole.log('Conectado a bbdd');","\t}\t","}); // conectar a la bbdd","","require('./config/passport')(passport); // pass passport for configuration","","app.use(express.static(__dirname + '/public'));","","// Configuración de la aplicación express","app.use(morgan('dev')); // muestra todas los requerimientos por consola","app.use(cookieParser()); // lee cookies (necesario para auth)","app.use(bodyParser()); // Obtiene información desde los formularios html","","app.set('view engine', 'ejs'); // aplica ejs como plantilla","","// required para passport ==========================================================","app.use(session({ secret: 'wendelmandanga' })); // session secret","app.use(passport.initialize());","app.use(passport.session()); // persistent login sessions","app.use(flash()); // muestra los mensajes flash en caso de error en el login","","// routes ======================================================================","require('./app/routes.js')(app, passport); // load our routes and pass in our app and fully configured passport","","","//Servidor local ======================================================================","/*var server = app.listen(process.env.PORT || 3000, function() {","    console.log('Listening in port %d', server.address().port);","});*/","","","//Servidor Cloud9/OpenShift/local","var port = process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT || 8080 || 3000, ip = process.env.IP || process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\";","","app.listen(port, ip);","","","//servidor heroku","/*var port = process.env.PORT || 5000; // Use the port that Heroku provides or default to 5000","app.listen(port);*/","","console.log('Listening in port ' + port);"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":59,"column":41},"action":"remove","lines":["var express = require('express');","var app = express();","","//var conection = require('mongodb').MongoClient;","var passport = require('passport');","var flash \t = require('connect-flash');//muestra mensajes flash","var mongoose = require('mongoose');","","var morgan       = require('morgan');//muestra las peticiones y respuestas por consola","var cookieParser = require('cookie-parser');","var bodyParser   = require('body-parser');//necesario para recibir datos desde html","var session      = require('express-session');","","var configDB = require('./config/database.js');//con esta línea cargamos la url de la base de datos a la variable configDB","","// Conexión con BBDD ===============================================================","mongoose.connect(configDB.url, function(err, res){","\tif(!err){","\t\tconsole.log('Conectado a bbdd');","\t}\t","}); // conectar a la bbdd","","require('./config/passport')(passport); // pass passport for configuration","","app.use(express.static(__dirname + '/public'));","","// Configuración de la aplicación express","app.use(morgan('dev')); // muestra todas los requerimientos por consola","app.use(cookieParser()); // lee cookies (necesario para auth)","app.use(bodyParser()); // Obtiene información desde los formularios html","","app.set('view engine', 'ejs'); // aplica ejs como plantilla","","// required para passport ==========================================================","app.use(session({ secret: 'wendelmandanga' })); // session secret","app.use(passport.initialize());","app.use(passport.session()); // persistent login sessions","app.use(flash()); // muestra los mensajes flash en caso de error en el login","","// routes ======================================================================","require('./app/routes.js')(app, passport); // load our routes and pass in our app and fully configured passport","","","//Servidor local ======================================================================","/*var server = app.listen(process.env.PORT || 3000, function() {","    console.log('Listening in port %d', server.address().port);","});*/","","","//Servidor Cloud9/OpenShift/local","var port = process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT || 8080 || 3000, ip = process.env.IP || process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\";","","app.listen(port, ip);","","","//servidor heroku","/*var port = process.env.PORT || 5000; // Use the port that Heroku provides or default to 5000","app.listen(port);*/","","console.log('Listening in port ' + port);"]}]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":22},"end":{"row":9,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1420622801413,"hash":"4871945c9ab7671177df000b484678edcbabf850"}