{"changed":false,"filter":false,"title":"server.js","tooltip":"/server.js","value":"var express = require('express');\nvar app = express();\n\n//var conection = require('mongodb').MongoClient;\nvar passport = require('passport');\nvar flash \t = require('connect-flash');//muestra mensajes flash\nvar mongoose = require('mongoose');\n\nvar morgan       = require('morgan');//muestra las peticiones y respuestas por consola\nvar cookieParser = require('cookie-parser');\nvar bodyParser   = require('body-parser');//necesario para recibir datos desde html\nvar session      = require('express-session');\n\nvar configDB = require('./config/database.js');//con esta línea cargamos la url de la base de datos a la variable configDB\n\n// Conexión con BBDD ===============================================================\nmongoose.connect(configDB.url, function(err, res){\n\tif(!err){\n\t\tconsole.log('Conectado a bbdd');\n\t}\t\n}); // conectar a la bbdd\n\nrequire('./config/passport')(passport); // pass passport for configuration\n\napp.use(express.static(__dirname + '/public'));\n\n// Configuración de la aplicación express\napp.use(morgan('dev')); // muestra todas los requerimientos por consola\napp.use(cookieParser()); // lee cookies (necesario para auth)\napp.use(bodyParser()); // Obtiene información desde los formularios html\n\napp.set('view engine', 'ejs'); // aplica ejs como plantilla\n\n// required para passport ==========================================================\napp.use(session({ secret: 'wendelmandanga' })); // session secret\napp.use(passport.initialize());\napp.use(passport.session()); // persistent login sessions\napp.use(flash()); // muestra los mensajes flash en caso de error en el login\n\n// routes ======================================================================\nrequire('./app/routes.js')(app, passport); // load our routes and pass in our app and fully configured passport\n\n\n//Servidor local ======================================================================\n/*var server = app.listen(process.env.PORT || 3000, function() {\n\n    console.log('Listening in port %d', server.address().port);\n\n});*/\n\n\n//Servidor Cloud9/OpenShift/local\nvar port = process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT || 8080 || 3000, ip = process.env.IP || process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\";\n\napp.listen(port, ip);\n\n\n//servidor heroku\n/*var port = process.env.PORT || 5000; // Use the port that Heroku provides or default to 5000\n\napp.listen(port);*/","undoManager":{"mark":0,"position":-1,"stack":[]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":28,"column":48},"end":{"row":28,"column":48},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415659588000}